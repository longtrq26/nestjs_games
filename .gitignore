# Gitignore for a Full-Stack Project (Next.js Frontend + NestJS Backend)

# -----------------------------------------------------------
# GLOBAL IGNORING RULES (Applies to the entire project)
# -----------------------------------------------------------

# Node.js
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by Istanbul
coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1.8+ compiled files
*.js.map
*.d.ts.map

# Optional: TypeScript cache file for faster compilation
.tsbuildinfo

# Editor directories and files
.idea/ # JetBrains IDEs (IntelliJ, WebStorm, etc.)
.vscode/ # VS Code
*.iml   # IntelliJ IDEA module files
.DS_Store # macOS system files
Thumbs.db # Windows thumbnail cache
.env # Environment variables file

# npm package manager cache
.npm/

# Yarn cache
.yarn/cache/
.yarn/unplugged/
.yarn/build-state.yml
.yarn/install-state.cjs

# ESLint cache
.eslintcache

# Next.js specific build output
.next/

# Prisma generated client
/node_modules/.prisma/client/


# -----------------------------------------------------------
# NEXT.JS FRONTEND SPECIFIC (Adjust path if frontend is in a subfolder, e.g., /frontend/.next/)
# Example: If your frontend is in a 'frontend' folder, adjust .next/ to frontend/.next/
# For simplicity, keeping them general assumes common top-level names or deep ignores.
# If your next.js app is at the root, these are fine.
# -----------------------------------------------------------
.next/
out/ # Exported static site output
.env.local
.env.development.local
.env.test.local
.env.production.local
npm-debug.log*
yarn-debug.log*

# Next.js build output, don't include it directly unless it's within a monorepo setup and handled differently
# If your next.js app is in a subfolder like `frontend/`, you might want:
# frontend/.next/
# frontend/out/
# frontend/.env.local


# -----------------------------------------------------------
# NESTJS BACKEND SPECIFIC (Adjust path if backend is in a subfolder, e.g., /backend/dist/)
# Example: If your backend is in a 'backend' folder, adjust dist/ to backend/dist/
# -----------------------------------------------------------
dist/ # Compiled output
*.tsbuildinfo # TypeScript build info (if used)
.env # Backend .env file (if not covered by global .env)
# If your nestjs app is in a subfolder like `backend/`, you might want:
# backend/dist/
# backend/.env

# Prisma migrations (if you manage them directly, might want to keep them)
# If you don't want to track migrations, uncomment:
# prisma/migrations/

# Database files (e.g., SQLite)
*.sqlite
*.sqlite-journal
*.db

# -----------------------------------------------------------
# COMMON IGNORES ACROSS ENVIRONMENTS
# -----------------------------------------------------------
# Editor folders
.idea/
.vscode/
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
Thumbs.db

# Misc
*.log
*.bak
*.swp